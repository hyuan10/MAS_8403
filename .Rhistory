library(ProjectTemplate)
load()
load.project()
setwd("~/CSC_8631_Project/CSC_8631_Analysis")
setwd("~/")
setwd("C:/Users/Harvey")
setwd("~/")
getwd()
source("~/CSC_8631_Project/CSC_8631_Analysis/munge/01-A.R")
source("~/CSC_8631_Project/CSC_8631_Analysis/munge/01-A.R")
getwd()
setwd("~/")
setwd("C:/Users/Harvey")
getwd()
cd(~/)
source("~/CSC_8631_Project/CSC_8631_Analysis/munge/01-A.R")
View(df_Enrolments)
getwd()
cd(~/)
cd(~\)
setwd("~\")
c:/Users/Harvey
qqq
getwd()
setwd("~\")
C:\Users\Harvey\
C:/Users/Harvey/
library(ProjectTemplate)
test <- read.csv("C:\Users\Harvey\Downloads\yellow_tripdata_2021-07.csv", header=TRUE, stringsAsFactors=FALSE)
test <- read.csv("C:\\Users\\Harvey\\Downloads\\yellow_tripdata_2021-07.csv", header=TRUE, stringsAsFactors=FALSE)
test <- read.csv("C:\Users\Harvey\Downloads\yellow_tripdata_2021-07.csv", header=TRUE, stringsAsFactors=FALSE)
View(test)
# Script to set up Project
setwd("~/../CSC_8634/")
# Loads "ProjectTemplate" library and loads the project
library('ProjectTemplate')
load.project()
# Script to set up Project
setwd("~/./CSC_8634/")
# Loads "ProjectTemplate" library and loads the project
library('ProjectTemplate')
load.project()
# Script to set up Project
setwd("~./CSC_8634/")
# Loads "ProjectTemplate" library and loads the project
library('ProjectTemplate')
load.project()
# Script to set up Project
setwd("./CSC_8634/")
# Loads "ProjectTemplate" library and loads the project
library('ProjectTemplate')
load.project()
# Script to set up Project
setwd("./CSC_8634/")
# Loads "ProjectTemplate" library and loads the project
library('ProjectTemplate')
load.project()
# Example preprocessing script.
#Read in data - When data is added to the data files, the code #2 can be used
vle = read.table(file = "C:/Users/Harvey/Documents/Newcastle University/CSC 8633/anonymisedData/vle.csv", sep = ',', header = T)
#vle = read.table(file = "./data/vle.csv", sep = ',', header = T)
student_info = read.table(file = "C:/Users/Harvey/Documents/Newcastle University/CSC 8633/anonymisedData/studentInfo.csv", sep = ',', header = T)
#student_info = read.table(file = "./data/studentInfo.csv", sep = ',', header = T)
library(tidyverse)
library(data.table)
library(ggplot2)
# Counting the number of activities per code module and Presentation
df_activity_count <- vle %>%
count(code_module,code_presentation,activity_type) %>% rename(activity_type_count = n)
# Sum of activities per code module and presentation
df_total_count <- df_activity_count %>%
group_by(code_module, code_presentation) %>%
summarise(activity_type=sum(`activity_type_count`), .groups='drop')
# Total pass fail by code module, presentation and final result
df.1 <- student_info %>%
group_by(code_module, code_presentation) %>%
summarise(Pass = sum(final_result == 'Pass'), .groups = 'drop')
df.2 <- student_info %>%
group_by(code_module, code_presentation) %>%
summarise(Fail = sum(final_result == 'Fail'), .groups = 'drop')
df.3 <- student_info %>%
group_by(code_module, code_presentation) %>%
summarise(Distinction = sum(final_result == 'Distinction'), .groups = 'drop')
df.4 <- student_info %>%
group_by(code_module, code_presentation) %>%
summarise(Withdrawn = sum(final_result == 'Withdrawn'), .groups = 'drop')
#Merging df to create 1
df_merged <- merge(merge(merge(merge(df_total_count, df.1, by = c("code_module", "code_presentation")),
df.2, by = c("code_module", "code_presentation")),
df.3,  by = c("code_module", "code_presentation")),
df.4, by = c("code_module", "code_presentation"))
View(df_merged)
atc <- ggplot(data = df_merged,mapping=aes(x=code_module, y=activity_type, fill = code_presentation))+
geom_bar(stat="identity")+
ggtitle('Sum of activities per module')+
theme_bw()
atc
pass <- ggplot(data = df_merged,mapping=aes(x=code_module, y=Pass, fill = code_presentation))+
geom_bar(stat="identity")+
ggtitle('Sum of students Pass per module')+
theme_bw()
pass
fail <- ggplot(data = df_merged,mapping=aes(x=code_module, y=Fail, fill = code_presentation))+
geom_bar(stat="identity")+
ggtitle('Sum of students Fail per module')+
theme_bw()
fail
dist <- ggplot(data = df_merged,mapping=aes(x=code_module, y=Distinction, fill = code_presentation))+
geom_bar(stat="identity")+
ggtitle('Sum of students Distinction per module')+
theme_bw()
dist
job_title <- c("AI Scientist","Business Data Analyst","Data Analyst")
job_title <- c("AI Scientist","Business Data Analyst","Data Analyst","Data Engineer","Data Science Manager","Data Scientist","Director of Data Science","Lead Data Engineer","Machine Learning Engineer","Machine Learning Infrastructure Engineer","Machine Learning Scientist","Principal Data Scientist","Research Scientist")
2020 Mean <- c(" £45,896.00"," £135,000.00"," £45,547.29"," £88,162.00"," £190,200.00"," £89,185.60"," £325,000.00"," £90,500.00"," £125,389.80"," £50,180.00"," £260,000.00"," £148,261.00"," £246,000.00")
2020_mean <- c(" £45,896.00"," £135,000.00"," £45,547.29"," £88,162.00"," £190,200.00"," £89,185.60"," £325,000.00"," £90,500.00"," £125,389.80"," £50,180.00"," £260,000.00"," £148,261.00"," £246,000.00")
mean_2020 <- c(" £45,896.00"," £135,000.00"," £45,547.29"," £88,162.00"," £190,200.00"," £89,185.60"," £325,000.00"," £90,500.00"," £125,389.80"," £50,180.00"," £260,000.00"," £148,261.00"," £246,000.00")
mean_2021 <- c(" £36,526.50"," £59,102.00"," £83,827.38"," £85,758.00"," £143,126.50"," £70,671.73"," £168,707.80"," £179,720.00"," £74,611.22"," £195,000.00"," £190,000.00"," £194,940.50"," £83,003.60")
mean_2020 <- c(" £160,000.00"," £44,677.00"," £100,550.74"," £127,187.27"," £170,196.60"," £137,136.68"," £196,979.00"," £118,187.00"," £129,451.94"," £58,255.00"," £141,766.67"," £162,674.00"," £105,569.00")
mean_2020 <- c(" £45,896.00"," £135,000.00"," £45,547.29"," £88,162.00"," £190,200.00"," £89,185.60"," £325,000.00"," £90,500.00"," £125,389.80"," £50,180.00"," £260,000.00"," £148,261.00"," £246,000.00")
mean_2022 <- c(" £160,000.00"," £44,677.00"," £100,550.74"," £127,187.27"," £170,196.60"," £137,136.68"," £196,979.00"," £118,187.00"," £129,451.94"," £58,255.00"," £141,766.67"," £162,674.00"," £105,569.00")
Difference_20-21 <- c(" -26%"," -128%"," 46%"," -3%"," -33%"," -26"," -93"," 50%"," -68%"," 74%"," -37%"," 24%"," -196%")
Difference_21/22 <- c(" 77%"," -32%"," 17%"," 33%"," 16%"," 48%"," 14%"," -52%"," 42%"," -235%"," -34%"," -20%"," 21%")
Difference_21>22 <- c(" 77%"," -32%"," 17%"," 33%"," 16%"," 48%"," 14%"," -52%"," 42%"," -235%"," -34%"," -20%"," 21%")
Difference_21_22 <- c(" 77%"," -32%"," 17%"," 33%"," 16%"," 48%"," 14%"," -52%"," 42%"," -235%"," -34%"," -20%"," 21%")
Difference_20_21 <- c(" -26%"," -128%"," 46%"," -3%"," -33%"," -26%"," -93%"," 50%"," -68%"," 74%"," -37%"," 24%"," -196%")
mean_salaries <- data.frame(job_title,mean_2020,mean_2021,mean_2022,Difference_20_21,Difference_21_22)
View(mean_salaries)
mean_2020 <- c("45,896.00","135,000.00","45,547.29","88,162.00","190,200.00","89,185.60","325,000.00","90,500.00","125,389.80","50,180.00","260,000.00","148,261.00","246,000.00")
mean_salaries <- data.frame(job_title,mean_2020,mean_2021,mean_2022,Difference_20_21,Difference_21_22)
mean_2021 <- c("36,526.50","59,102.00","83,827.38","85,758.00","143,126.50","70,671.73","168,707.80","179,720.00","74,611.22","195,000.00","190,000.00","194,940.50","83,003.60")
mean_2022 <- c("160,000.00","44,677.00","100,550.74","127,187.27","170,196.60","137,136.68","196,979.00","118,187.00","129,451.94","58,255.00","141,766.67","162,674.00","105,569.00")
mean_salaries <- data.frame(job_title,mean_2020,mean_2021,mean_2022,Difference_20_21,Difference_21_22)
ggplot()
ggplot2::hist(mean_salaries
)
View(mean_salaries)
mean_salary <- data.frame(
job_title = c("AI Scientist","Business Data Analyst","Data Analyst"),
mean_2020 = c("45,896.00","135,000.00","45,547.29","88,162.00","190,200.00","89,185.60","325,000.00","90,500.00","125,389.80","50,180.00","260,000.00","148,261.00","246,000.00"),
mean_2021 = c("160,000.00","44,677.00","100,550.74","127,187.27","170,196.60","137,136.68","196,979.00","118,187.00","129,451.94","58,255.00","141,766.67","162,674.00","105,569.00"),
mean_2022 = c("160,000.00","44,677.00","100,550.74","127,187.27","170,196.60","137,136.68","196,979.00","118,187.00","129,451.94","58,255.00","141,766.67","162,674.00","105,569.00"),
difference_20_21 = c(" -26%"," -128%"," 46%"," -3%"," -33%"," -26%"," -93%"," 50%"," -68%"," 74%"," -37%"," 24%"," -196%"),
difference_21_22 = c(" 77%"," -32%"," 17%"," 33%"," 16%"," 48%"," 14%"," -52%"," 42%"," -235%"," -34%"," -20%"," 21%"))
mean_salary <- data.frame(
job_title = c("AI Scientist","Business Data Analyst","Data Analyst"), mean_2020 = c("45,896.00","135,000.00","45,547.29","88,162.00","190,200.00","89,185.60","325,000.00","90,500.00","125,389.80","50,180.00","260,000.00","148,261.00","246,000.00"),mean_2021 = c("160,000.00","44,677.00","100,550.74","127,187.27","170,196.60","137,136.68","196,979.00","118,187.00","129,451.94","58,255.00","141,766.67","162,674.00","105,569.00"),mean_2022 = c("160,000.00","44,677.00","100,550.74","127,187.27","170,196.60","137,136.68","196,979.00","118,187.00","129,451.94","58,255.00","141,766.67","162,674.00","105,569.00"),difference_20_21 = c(" -26%"," -128%"," 46%"," -3%"," -33%"," -26%"," -93%"," 50%"," -68%"," 74%"," -37%"," 24%"," -196%"),difference_21_22 = c(" 77%"," -32%"," 17%"," 33%"," 16%"," 48%"," 14%"," -52%"," 42%"," -235%"," -34%"," -20%"," 21%"))
mean_salary <- data.frame(job_title = c("AI Scientist","Business Data Analyst","Data Analyst"), mean_2020 = c("45,896.00","135,000.00","45,547.29","88,162.00","190,200.00","89,185.60","325,000.00","90,500.00","125,389.80","50,180.00","260,000.00","148,261.00","246,000.00"),mean_2021 = c("160,000.00","44,677.00","100,550.74","127,187.27","170,196.60","137,136.68","196,979.00","118,187.00","129,451.94","58,255.00","141,766.67","162,674.00","105,569.00"),mean_2022 = c("160,000.00","44,677.00","100,550.74","127,187.27","170,196.60","137,136.68","196,979.00","118,187.00","129,451.94","58,255.00","141,766.67","162,674.00","105,569.00"),difference_20_21 = c(" -26%"," -128%"," 46%"," -3%"," -33%"," -26%"," -93%"," 50%"," -68%"," 74%"," -37%"," 24%"," -196%"),difference_21_22 = c(" 77%"," -32%"," 17%"," 33%"," 16%"," 48%"," 14%"," -52%"," 42%"," -235%"," -34%"," -20%"," 21%"))
mean_salary <- data.frame(job_title = c("AI Scientist","Business Data Analyst","Data Analyst","Data Engineer","Data Science Manager","Data Scientist","Director of Data Science","Lead Data Engineer","Machine Learning Engineer","Machine Learning Infrastructure Engineer","Machine Learning Scientist","Principal Data Scientist","Research Scientist"), mean_2020 = c("45,896.00","135,000.00","45,547.29","88,162.00","190,200.00","89,185.60","325,000.00","90,500.00","125,389.80","50,180.00","260,000.00","148,261.00","246,000.00"),mean_2021 = c("160,000.00","44,677.00","100,550.74","127,187.27","170,196.60","137,136.68","196,979.00","118,187.00","129,451.94","58,255.00","141,766.67","162,674.00","105,569.00"),mean_2022 = c("160,000.00","44,677.00","100,550.74","127,187.27","170,196.60","137,136.68","196,979.00","118,187.00","129,451.94","58,255.00","141,766.67","162,674.00","105,569.00"),difference_20_21 = c(" -26%"," -128%"," 46%"," -3%"," -33%"," -26%"," -93%"," 50%"," -68%"," 74%"," -37%"," 24%"," -196%"),difference_21_22 = c(" 77%"," -32%"," 17%"," 33%"," 16%"," 48%"," 14%"," -52%"," 42%"," -235%"," -34%"," -20%"," 21%"))
View(mean_salary)
mean_salary <- data.frame(job_title = c("AI Scientist","Business Data Analyst","Data Analyst","Data Engineer","Data Science Manager","Data Scientist","Director of Data Science","Lead Data Engineer","Machine Learning Engineer","Machine Learning Infrastructure Engineer","Machine Learning Scientist","Principal Data Scientist","Research Scientist"), mean_2020 = c("45,896.00","135,000.00","45,547.29","88,162.00","190,200.00","89,185.60","325,000.00","90,500.00","125,389.80","50,180.00","260,000.00","148,261.00","246,000.00"),mean_2021 = c("36,526.50","59,102.00","83,827.38","85,758.00","143,126.50","70,671.73","168,707.80","179,720.00","74,611.22","195,000.00","190,000.00","194,940.50","83,003.60"),mean_2022 = c("160,000.00","44,677.00","100,550.74","127,187.27","170,196.60","137,136.68","196,979.00","118,187.00","129,451.94","58,255.00","141,766.67","162,674.00","105,569.00"),difference_20_21 = c(" -26%"," -128%"," 46%"," -3%"," -33%"," -26%"," -93%"," 50%"," -68%"," 74%"," -37%"," 24%"," -196%"),difference_21_22 = c(" 77%"," -32%"," 17%"," 33%"," 16%"," 48%"," 14%"," -52%"," 42%"," -235%"," -34%"," -20%"," 21%"))
knitr::opts_chunk$set(echo = TRUE)
mean_salary <- data.frame(job_title = c("AI Scientist","Business Data Analyst","Data Analyst","Data Engineer","Data Science Manager","Data Scientist","Director of Data Science","Lead Data Engineer","Machine Learning Engineer","Machine Learning Infrastructure Engineer","Machine Learning Scientist","Principal Data Scientist","Research Scientist"), mean_2020 = c("45,896.00","135,000.00","45,547.29","88,162.00","190,200.00","89,185.60","325,000.00","90,500.00","125,389.80","50,180.00","260,000.00","148,261.00","246,000.00"),mean_2021 = c("36,526.50","59,102.00","83,827.38","85,758.00","143,126.50","70,671.73","168,707.80","179,720.00","74,611.22","195,000.00","190,000.00","194,940.50","83,003.60"),mean_2022 = c("160,000.00","44,677.00","100,550.74","127,187.27","170,196.60","137,136.68","196,979.00","118,187.00","129,451.94","58,255.00","141,766.67","162,674.00","105,569.00"),difference_20_21 = c(" -26%"," -128%"," 46%"," -3%"," -33%"," -26%"," -93%"," 50%"," -68%"," 74%"," -37%"," 24%"," -196%"),difference_21_22 = c(" 77%"," -32%"," 17%"," 33%"," 16%"," 48%"," 14%"," -52%"," 42%"," -235%"," -34%"," -20%"," 21%"))
print(mean_salary)
library(tidyverse)
library(kableextra)
install.packages("zoo")
library(zoo)
install.packages("kableExtra")
ggplot() + geom_line(aes(y=job_title, x=))
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
knitr::opts_knit$set(root.dir= normalizePath('..'))
getwd()
knitr::include_graphics("Mean_salary.png",error = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
knitr::opts_knit$set(root.dir= normalizePath('..'))
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
knitr::opts_knit$set(root.dir= normalizePath('..'))
getwd()
knitr::include_graphics("Mean_salary.png",error = FALSE)
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
knitr::include_graphics("Mean_salary.png",error = FALSE)
tinytex::reinstall_tinytex(repository = "illinois")
getwd()
knitr::include_graphics("Mean_salary.png",error = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
knitr::opts_knit$set(root.dir= normalizePath('..'))
knitr::include_graphics("Mean_salary.png",error = FALSE)
knitr::include_graphics("Mean_salary.png",error = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
knitr::opts_knit$set(root.dir= normalizePath('..'))
install.packages("palmerpenguins")
library(palmerpenguins)
data("penguins")
penguins = na.omit(penguins)
my.student.number = 0077439
set.seed(my.student.number)
my.penguins = penguins[sample(nrow(penguins), 100), ]
View(my.penguins)
setwd("~/Documents/Masters/MAS8403")
write.csv(my.penguins, file = "my.penguins.csv")
mean.penguin <- aggregate(my.penguins,by=list(species,island),FUN=mean,na.rm=TRUE)
mean.penguin <- aggregate(my.penguins, by=list(body_mass_g),FUN=mean,na.rm=TRUE)
mean.penguin <- aggregate(body_mass_g~species,my.penguins,mean)
View(mean.penguin)
mean.penguin <- aggregate(body_mass_g~species~sex,my.penguins,mean)
mean.penguin <- aggregate(body_mass_g~species+sex,my.penguins,mean)
View(mean.penguin)
mean.penguin <- aggregate(body_mass_g~species+island+sex,my.penguins,mean)
View(mean.penguin)
View(mean.penguin)
View(mean.penguin)
mean.penguin <- aggregate(body_mass_g~species+island+sex,my.penguins,mean)
sorted.mean <- mean.penguin[order(species),]
attach(mean.penguin)
sorted.mean <- mean.penguin[order(species),]
detach(mean.penguin)
View(sorted.mean)
View(sorted.mean)
View(mean.penguin)
remove_column(kable_input, 1)
View(sorted.mean)
View(my.penguins)
View(mean.penguin)
species.penguin <- aggregate(body_mass_g~species+sex,mean.penguin,mean)
View(species.penguin)
View(species.penguin)
sorted.species <- species.penguin[order(species),]
sorted.species <- species.penguin[order(species),]
attach(species.penguin)
sorted.species <- species.penguin[order(species),]
detach(species.penguin)
View(sorted.species)
View(penguins)
sd(my.penguins$body_mass_g)
sd.bodymass <- sd(my.penguins$body_mass_g)
var.bodymass <- sd.bodymass*sd.bodymass
var.bodymass <- sd.bodymass/sd.bodymass
var.bodymass <- var(my.penguins$body_mass_g)
x <- seq(from=-5,to=5,length.out=1000)
mean.bodymass <- mean(my.penguins$body_mass_g)
f.x <- dnorm(x,mean = mean.bodymass,sd = sd.bodymass)
plot(x.f.x,type='l')
plot(x.f.x,type='l')#
plot(x.f.x,type='l')
plot(x,f.x,type='l')
summary(my.penguins$body_mass_g)
rm(f.x)
rm(x)
lower <- mean.bodymass - sd.bodymass
upper <- mean.bodymass + sd.bodymass
x <- seq(-4, 4, length = 1000) * sd.bodymass + mean.bodymass
y <- dnorm(x, mean.bodymass, sd.bodymass)
plot(x,y, type = "l", lwd = 2, axes = FALSE, xlab = "", ylab = "")
sd_axis_bounds = 5
plot(x,y, type = "l", lwd = 2, axes = FALSE, xlab = "", ylab = "")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0)
library(tidyverse)
ggplot(my.penguins, aes(x = body_mass_g)) +
stat_function(
fun = dnorm,
args = with(my.penguins, c(mean = mean(body_mass_g), sd = sd(body_mass_g)))
) +
scale_x_continuous("body_mass_g")
library(tidyverse)
library(tidyselect)
install.packages("tidyverse")
library(tidyverse)
install.packages(c("car", "clue", "colorspace", "commonmark", "cpp11", "curl", "data.table", "digest", "dplyr", "evaluate", "fansi", "fBasics", "fontawesome", "forcats", "ggplot2", "ggsignif", "glue", "haven", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lme4", "magrittr", "maptools", "markdown", "minqa", "openssl", "pkgload", "processx", "ps", "purrr", "R.utils", "Rcpp", "readxl", "rlang", "rmarkdown", "rmutil", "shiny", "stringi", "stringr", "sys", "testthat", "tibble", "tidyr", "tidyselect", "timeSeries", "tzdb", "vctrs", "xfun", "yaml"))
library(tidyverse)
ggplot(my.penguins, aes(x = body_mass_g)) +
stat_function(
fun = dnorm,
args = with(my.penguins, c(mean = mean(body_mass_g), sd = sd(body_mass_g)))
) +
scale_x_continuous("body_mass_g")
ggplot(my.penguins, aes(x = body_mass_g)) +
stat_function(
fun = dnorm,
args = with(my.penguins, c(mean = mean(body_mass_g), sd = sd(body_mass_g)))
) +
scale_x_continuous("body_mass_g")+ xlim(2000, 60000)
ggplot(my.penguins, aes(x = body_mass_g)) +
stat_function(
fun = dnorm,
args = with(my.penguins, c(mean = mean(body_mass_g), sd = sd(body_mass_g)))
) +
scale_x_continuous("body_mass_g")+ xlim(200, 6000)
ggplot(my.penguins, aes(x = body_mass_g)) +
stat_function(
fun = dnorm,
args = with(my.penguins, c(mean = mean(body_mass_g), sd = sd(body_mass_g)))
) +
scale_x_continuous("body_mass_g")+ xlim(2000, 6000)
ggplot(my.penguins, aes(x = body_mass_g)) +
stat_function(
fun = dnorm,
args = with(my.penguins, c(mean = mean(body_mass_g), sd = sd(body_mass_g)))
) +
scale_x_continuous("body_mass_g")+ xlim(2000, 8000)
ggplot(my.penguins, aes(x = body_mass_g)) +
stat_function(
fun = dnorm,
args = with(my.penguins, c(mean = mean(body_mass_g), sd = sd(body_mass_g)))
) +
scale_x_continuous("body_mass_g")+ xlim(2000, 7000)
ggplot(my.penguins,) +
stat_function(
fun = dnorm,
args = with(my.penguins, c(mean = mean(body_mass_g), sd = sd(body_mass_g)))
) +
scale_x_continuous("body_mass_g")+ xlim(2000, 7000)
ggplot(my.penguins, aes(x = body_mass_g)) +
stat_function(
fun = dnorm,
args = with(my.penguins, c(mean = mean(body_mass_g), sd = sd(body_mass_g)))
) +
scale_x_continuous("body_mass_g")+ xlim(2000, 7000)
ggplot(my.penguins, aes(x = body_mass_g)) +
stat_function(
fun = dnorm,
args = with(my.penguins, c(mean = mean(body_mass_g), sd = sd(body_mass_g)))
) + xlim(2000, 7000)
)
ggplot(my.penguins, aes(x = body_mass_g)) +
stat_function(
fun = dnorm,
args = with(my.penguins, c(mean = mean(body_mass_g), sd = sd(body_mass_g)))
) + xlim(2000, 7000)
ggplot(my.penguins, aes(x = body_mass_g)) +
stat_function(
fun = dnorm,
args = with(my.penguins, c(mean = mean(body_mass_g), sd = sd(body_mass_g)))
) + xlim(2000, 7000)
island.mean <- aggregate(body_mass_g~island+sex,my.penguins,mean)
View(island.mean)
install.packages("knitrExtra")
install.packages("kableExtra")
knitr::opts_chunk$set(echo = TRUE)
library(palmerpenguins)
library(tidyverse)
library(knitr)
library(magick)
data("penguins")
penguins = na.omit(penguins)
my.student.number = 0077439
set.seed(my.student.number)
my.penguins = penguins[sample(nrow(penguins), 100), ]
mean.penguin <- aggregate(body_mass_g~species+island+sex,my.penguins,mean)
attach(mean.penguin)
sorted.mean <- mean.penguin[order(species),]
detach(mean.penguin)
species.penguin <- aggregate(body_mass_g~species+sex,mean.penguin,mean)
attach(species.penguin)
sorted.species <- species.penguin[order(species),]
detach(species.penguin)
island.mean <- aggregate(body_mass_g~island+sex,my.penguins,mean)
kable(species.penguin, caption="Mean Body Mass by Species")
qt(0.975,99)
qt(0.975,42)
qt(0.975,58)
qt(0.975,24)
qt(0.975,20)
filtered <- filter(my.penguins, species =="Adelie")
View(filtered)
mean.filtered <- aggregate(body_mass_g~species+island+sex,filtered,mean.filtered)
mean.filtered <- aggregate(body_mass_g~species+island+sex,filtered,mean)
View(mean.filtered)
